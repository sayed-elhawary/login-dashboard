{"ast":null,"code":"import{useEffect,useState}from'react';import{Navigate,Outlet}from'react-router-dom';import axios from'axios';import{CircularProgress,Box}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=()=>{const[isAuthenticated,setIsAuthenticated]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const verifyAuth=async()=>{try{const token=localStorage.getItem('token')||sessionStorage.getItem('token');if(!token){setIsAuthenticated(false);setLoading(false);return;}await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/protected-route\"),{headers:{Authorization:\"Bearer \".concat(token)}});setIsAuthenticated(true);}catch(err){setIsAuthenticated(false);}finally{setLoading(false);}};verifyAuth();},[]);if(loading){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return isAuthenticated?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};export default ProtectedRoute;","map":{"version":3,"names":["useEffect","useState","Navigate","Outlet","axios","CircularProgress","Box","jsx","_jsx","ProtectedRoute","isAuthenticated","setIsAuthenticated","loading","setLoading","verifyAuth","token","localStorage","getItem","sessionStorage","get","concat","process","env","REACT_APP_API_URL","headers","Authorization","err","sx","display","justifyContent","alignItems","height","children","to"],"sources":["/root/frontend-auth-dashboard/frontend/src/components/Auth/ProtectedRoute.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport axios from 'axios';\nimport { CircularProgress, Box } from '@mui/material';\n\nconst ProtectedRoute = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const verifyAuth = async () => {\n      try {\n        const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n        \n        if (!token) {\n          setIsAuthenticated(false);\n          setLoading(false);\n          return;\n        }\n\n        await axios.get(`${process.env.REACT_APP_API_URL}/auth/protected-route`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        setIsAuthenticated(true);\n      } catch (err) {\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    verifyAuth();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,CAAEC,GAAG,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC,CAE9E,GAAI,CAACF,KAAK,CAAE,CACVJ,kBAAkB,CAAC,KAAK,CAAC,CACzBE,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,KAAM,CAAAT,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,0BAAyB,CACvEC,OAAO,CAAE,CACPC,aAAa,WAAAL,MAAA,CAAYL,KAAK,CAChC,CACF,CAAC,CAAC,CAEFJ,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAE,MAAOe,GAAG,CAAE,CACZf,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,CACX,mBACEJ,IAAA,CAACF,GAAG,EAACqB,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAAAC,QAAA,cAC5FxB,IAAA,CAACH,gBAAgB,GAAE,CAAC,CACjB,CAAC,CAEV,CAEA,MAAO,CAAAK,eAAe,cAAGF,IAAA,CAACL,MAAM,GAAE,CAAC,cAAGK,IAAA,CAACN,QAAQ,EAAC+B,EAAE,CAAC,QAAQ,CAAE,CAAC,CAChE,CAAC,CAED,cAAe,CAAAxB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}